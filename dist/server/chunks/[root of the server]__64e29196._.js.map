{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/jota/Documentos/node/Next%20js/tasklist-fullstack/src/utils/db.ts"],"sourcesContent":["import { Sequelize } from \"sequelize\";\nimport * as mysql2 from \"mysql2\";\n\nconst connection = new Sequelize(\n  process.env.DB_DATABASE || \"next_tasklist_api\",\n  process.env.DB_USERNAME || \"root\",\n  process.env.DB_PASSWORD || \"none\",\n  {\n    dialect: \"mysql\",\n    host: process.env.DB_HOST,\n    port: parseInt(process.env.DB_PORT || \"3306\"),\n    dialectModule: mysql2,\n  }\n);\n\nexport default connection;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,aAAa,IAAI,4IAAA,CAAA,YAAS,CAC9B,QAAQ,GAAG,CAAC,WAAW,IAAI,qBAC3B,QAAQ,GAAG,CAAC,WAAW,IAAI,QAC3B,QAAQ,GAAG,CAAC,WAAW,IAAI,QAC3B;IACE,SAAS;IACT,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI;IACtC,eAAe;AACjB;uCAGa","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/jota/Documentos/node/Next%20js/tasklist-fullstack/src/utils/initSequelize.ts"],"sourcesContent":["import connection from \"./db\";\n\nexport default async function initSequelize() {\n  try {\n    await connection.sync();\n    console.log(\"Banco de dados Sincronizado!\");\n  } catch (error: unknown) {\n    console.log(`Erro ao sincronizar o banco de dados ${error}`);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe,eAAe;IAC5B,IAAI;QACF,MAAM,oHAAA,CAAA,UAAU,CAAC,IAAI;QACrB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAgB;QACvB,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,OAAO;IAC7D;AACF","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///home/jota/Documentos/node/Next%20js/tasklist-fullstack/src/app/api/route.ts"],"sourcesContent":["import initSequelize from \"@/utils/initSequelize\";\n\ninitSequelize();\n\nexport async function GET() {\n  return new Response(\"API est√° funcionando!\");\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,CAAA,GAAA,+HAAA,CAAA,UAAa,AAAD;AAEL,eAAe;IACpB,OAAO,IAAI,SAAS;AACtB","debugId":null}}]
}