{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/jota/Documentos/node/Next%20js/tasklist-fullstack/src/utils/db.ts"],"sourcesContent":["import { Sequelize } from \"sequelize\";\nimport * as mysql2 from \"mysql2\";\n\nconst connection = new Sequelize(\n  process.env.DB_DATABASE || \"next_tasklist_api\",\n  process.env.DB_USERNAME || \"root\",\n  process.env.DB_PASSWORD || \"none\",\n  {\n    dialect: \"mysql\",\n    host: process.env.DB_HOST,\n    port: parseInt(process.env.DB_PORT || \"3306\"),\n    dialectModule: mysql2,\n  }\n);\n\nasync function initSequelize() {\n  try {\n    await connection.authenticate();\n    console.log(\"Conex√£o Estabelecida\");\n    await connection.sync({ alter: true });\n    console.log(\"Banco de dados Sincronizado!\");\n  } catch (error: unknown) {\n    console.log(`Erro ao sincronizar o banco de dados ${error}`);\n  }\n}\n\ninitSequelize();\nexport default connection;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,aAAa,IAAI,4IAAA,CAAA,YAAS,CAC9B,QAAQ,GAAG,CAAC,WAAW,IAAI,qBAC3B,QAAQ,GAAG,CAAC,WAAW,IAAI,QAC3B,QAAQ,GAAG,CAAC,WAAW,IAAI,QAC3B;IACE,SAAS;IACT,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI;IACtC,eAAe;AACjB;AAGF,eAAe;IACb,IAAI;QACF,MAAM,WAAW,YAAY;QAC7B,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,IAAI,CAAC;YAAE,OAAO;QAAK;QACpC,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAgB;QACvB,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,OAAO;IAC7D;AACF;AAEA;uCACe","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/jota/Documentos/node/Next%20js/tasklist-fullstack/src/models/Task.ts"],"sourcesContent":["import { DataTypes } from \"sequelize\";\nimport connection from \"@/utils/db\";\n\nconst Task = connection.define(\"Task\", {\n  name: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n  description: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n});\n\nexport default Task;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,OAAO,oHAAA,CAAA,UAAU,CAAC,MAAM,CAAC,QAAQ;IACrC,MAAM;QACJ,MAAM,4IAAA,CAAA,YAAS,CAAC,MAAM;QACtB,WAAW;IACb;IACA,aAAa;QACX,MAAM,4IAAA,CAAA,YAAS,CAAC,MAAM;QACtB,WAAW;IACb;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///home/jota/Documentos/node/Next%20js/tasklist-fullstack/src/app/api/task/route.ts"],"sourcesContent":["import Task from \"@/models/Task\";\n\nexport async function POST(req: Request) {\n  const body = await req.json();\n\n  console.log(\"Dados Recebidos\", body);\n\n  const t = await Task.create({\n    name: body.name,\n    description: body.description,\n  });\n\n  return new Response(\n    JSON.stringify({ message: \"Tarefa criada com sucesso!\", task: t }),\n    {\n      status: 201,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n}\n\nexport async function GET() {\n  const allTasks = await Task.findAll();\n\n  return new Response(\n    JSON.stringify({\n      message: \"Tasks encontradas com sucesso!\",\n      tasks: allTasks,\n    }),\n    {\n      status: 200,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,OAAO,MAAM,IAAI,IAAI;IAE3B,QAAQ,GAAG,CAAC,mBAAmB;IAE/B,MAAM,IAAI,MAAM,uHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;QAC1B,MAAM,KAAK,IAAI;QACf,aAAa,KAAK,WAAW;IAC/B;IAEA,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;QAAE,SAAS;QAA8B,MAAM;IAAE,IAChE;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IACF;AAEJ;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO;IAEnC,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;QACb,SAAS;QACT,OAAO;IACT,IACA;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IACF;AAEJ","debugId":null}}]
}