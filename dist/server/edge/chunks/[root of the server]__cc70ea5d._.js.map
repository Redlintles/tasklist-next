{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/utils/db.ts"],"sourcesContent":["import { Sequelize } from \"sequelize\";\n\nconst connection = new Sequelize(\n  process.env.DB_DATABASE || \"next_tasklist_api\",\n  process.env.DB_USERNAME || \"root\",\n  process.env.DB_PASSWORD || \"none\",\n  {\n    dialect: \"mysql\",\n    host: process.env.DB_HOST,\n    port: parseInt(process.env.DB_PORT || \"3306\"),\n  }\n);\n\nexport default connection;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,kJAAA,CAAA,YAAS,CAC9B,QAAQ,GAAG,CAAC,WAAW,IAAI,qBAC3B,QAAQ,GAAG,CAAC,WAAW,IAAI,QAC3B,QAAQ,GAAG,CAAC,WAAW,IAAI,QAC3B;IACE,SAAS;IACT,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI;AACxC;uCAGa"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/utils/initSequelize.ts"],"sourcesContent":["import connection from \"./db\";\n\nexport default async function initSequelize() {\n  try {\n    await connection.sync();\n    console.log(\"Banco de dados Sincronizado!\");\n  } catch (error: unknown) {\n    console.log(`Erro ao sincronizar o banco de dados ${error}`);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe,eAAe;IAC5B,IAAI;QACF,MAAM,0HAAA,CAAA,UAAU,CAAC,IAAI;QACrB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAgB;QACvB,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,OAAO;IAC7D;AACF"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport initSequelize from \"@/utils/initSequelize\";\n\nexport function middleware() {\n  initSequelize();\n\n  return NextResponse.next();\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,SAAS;IACd,CAAA,GAAA,qIAAA,CAAA,UAAa,AAAD;IAEZ,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B"}}]
}